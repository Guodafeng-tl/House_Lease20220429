<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dafeng.dao.ContractMapper">
  <resultMap id="BaseResultMap" type="com.dafeng.bean.Contract">
    <id column="contract_id" jdbcType="INTEGER" property="contractId" />
    <result column="contract_content" jdbcType="VARCHAR" property="contractContent" />
    <result column="contract_day" jdbcType="TIMESTAMP" property="contractDay" />
    <result column="contract_begintime" jdbcType="TIMESTAMP" property="contractBegintime" />
    <result column="contract_endtime" jdbcType="TIMESTAMP" property="contractEndtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contract_id, contract_content, contract_day, contract_begintime, contract_endtime
  </sql>
  <select id="selectByExample" parameterType="com.dafeng.bean.ContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dafeng.bean.ContractExample">
    delete from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dafeng.bean.Contract">
    insert into contract (contract_id, contract_content, contract_day, 
      contract_begintime, contract_endtime)
    values (#{contractId,jdbcType=INTEGER}, #{contractContent,jdbcType=VARCHAR}, #{contractDay,jdbcType=TIMESTAMP}, 
      #{contractBegintime,jdbcType=TIMESTAMP}, #{contractEndtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dafeng.bean.Contract">
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="contractContent != null">
        contract_content,
      </if>
      <if test="contractDay != null">
        contract_day,
      </if>
      <if test="contractBegintime != null">
        contract_begintime,
      </if>
      <if test="contractEndtime != null">
        contract_endtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractContent != null">
        #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="contractDay != null">
        #{contractDay,jdbcType=TIMESTAMP},
      </if>
      <if test="contractBegintime != null">
        #{contractBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractEndtime != null">
        #{contractEndtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dafeng.bean.ContractExample" resultType="java.lang.Long">
    select count(*) from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract
    <set>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.contractContent != null">
        contract_content = #{record.contractContent,jdbcType=VARCHAR},
      </if>
      <if test="record.contractDay != null">
        contract_day = #{record.contractDay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractBegintime != null">
        contract_begintime = #{record.contractBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractEndtime != null">
        contract_endtime = #{record.contractEndtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract
    set contract_id = #{record.contractId,jdbcType=INTEGER},
      contract_content = #{record.contractContent,jdbcType=VARCHAR},
      contract_day = #{record.contractDay,jdbcType=TIMESTAMP},
      contract_begintime = #{record.contractBegintime,jdbcType=TIMESTAMP},
      contract_endtime = #{record.contractEndtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dafeng.bean.Contract">
    update contract
    <set>
      <if test="contractContent != null">
        contract_content = #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="contractDay != null">
        contract_day = #{contractDay,jdbcType=TIMESTAMP},
      </if>
      <if test="contractBegintime != null">
        contract_begintime = #{contractBegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractEndtime != null">
        contract_endtime = #{contractEndtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dafeng.bean.Contract">
    update contract
    set contract_content = #{contractContent,jdbcType=VARCHAR},
      contract_day = #{contractDay,jdbcType=TIMESTAMP},
      contract_begintime = #{contractBegintime,jdbcType=TIMESTAMP},
      contract_endtime = #{contractEndtime,jdbcType=TIMESTAMP}
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
</mapper>